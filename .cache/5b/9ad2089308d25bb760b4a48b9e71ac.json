{"id":"../node_modules/@uiw/react-md-editor/lib/cjs/commands/italic.js","dependencies":[{"name":"E:\\React\\askQuestion\\node_modules\\@uiw\\react-md-editor\\lib\\cjs\\commands\\italic.js.map","includedInParent":true,"mtime":499162500000},{"name":"E:\\React\\askQuestion\\package.json","includedInParent":true,"mtime":1602407828533},{"name":"E:\\React\\askQuestion\\node_modules\\@uiw\\react-md-editor\\package.json","includedInParent":true,"mtime":1602143344346},{"name":"@babel/runtime/helpers/interopRequireWildcard","loc":{"line":3,"column":38},"parent":"E:\\React\\askQuestion\\node_modules\\@uiw\\react-md-editor\\lib\\cjs\\commands\\italic.js","resolved":"E:\\React\\askQuestion\\node_modules\\@babel\\runtime\\helpers\\interopRequireWildcard.js"},{"name":"react","loc":{"line":10,"column":44},"parent":"E:\\React\\askQuestion\\node_modules\\@uiw\\react-md-editor\\lib\\cjs\\commands\\italic.js","resolved":"E:\\React\\askQuestion\\node_modules\\react\\index.js"},{"name":"../utils/markdownUtils","loc":{"line":12,"column":29},"parent":"E:\\React\\askQuestion\\node_modules\\@uiw\\react-md-editor\\lib\\cjs\\commands\\italic.js","resolved":"E:\\React\\askQuestion\\node_modules\\@uiw\\react-md-editor\\lib\\cjs\\utils\\markdownUtils.js"}],"generated":{"js":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.italic = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _markdownUtils = require(\"../utils/markdownUtils\");\n\nvar italic = {\n  name: 'italic',\n  keyCommand: 'italic',\n  buttonProps: {\n    'aria-label': 'Add italic text'\n  },\n  icon: /*#__PURE__*/React.createElement(\"svg\", {\n    \"data-name\": \"italic\",\n    width: \"12\",\n    height: \"12\",\n    role: \"img\",\n    viewBox: \"0 0 320 512\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M204.758 416h-33.849l62.092-320h40.725a16 16 0 0 0 15.704-12.937l6.242-32C297.599 41.184 290.034 32 279.968 32H120.235a16 16 0 0 0-15.704 12.937l-6.242 32C96.362 86.816 103.927 96 113.993 96h33.846l-62.09 320H46.278a16 16 0 0 0-15.704 12.935l-6.245 32C22.402 470.815 29.967 480 40.034 480h158.479a16 16 0 0 0 15.704-12.935l6.245-32c1.927-9.88-5.638-19.065-15.704-19.065z\"\n  })),\n  execute: function execute(state, api) {\n    // Adjust the selection to encompass the whole word if the caret is inside one\n    var newSelectionRange = (0, _markdownUtils.selectWord)({\n      text: state.text,\n      selection: state.selection\n    });\n    var state1 = api.setSelectionRange(newSelectionRange); // Replaces the current selection with the italic mark up\n\n    var state2 = api.replaceSelection(\"*\".concat(state1.selectedText, \"*\")); // Adjust the selection to not contain the *\n\n    api.setSelectionRange({\n      start: state2.selection.end - 1 - state1.selectedText.length,\n      end: state2.selection.end - 1\n    });\n  }\n};\nexports.italic = italic; \n"},"sourceMaps":{"js":{"version":3,"sources":["../../../src/commands/italic.tsx"],"names":["italic","name","keyCommand","buttonProps","icon","execute","state","api","newSelectionRange","text","selection","state1","setSelectionRange","state2","replaceSelection","selectedText","start","end","length"],"mappings":";;;;;;;;;AAAA;;AAEA;;AAEO,IAAMA,MAAgB,GAAG;AAC9BC,EAAAA,IAAI,EAAE,QADwB;AAE9BC,EAAAA,UAAU,EAAE,QAFkB;AAG9BC,EAAAA,WAAW,EAAE;AAAE,kBAAc;AAAhB,GAHiB;AAI9BC,EAAAA,IAAI,eACF;AAAK,iBAAU,QAAf;AAAwB,IAAA,KAAK,EAAC,IAA9B;AAAmC,IAAA,MAAM,EAAC,IAA1C;AAA+C,IAAA,IAAI,EAAC,KAApD;AAA0D,IAAA,OAAO,EAAC;AAAlE,kBACE;AAAM,IAAA,IAAI,EAAC,cAAX;AAA0B,IAAA,CAAC,EAAC;AAA5B,IADF,CAL4B;AAS9BC,EAAAA,OAAO,EAAE,iBAACC,KAAD,EAAmBC,GAAnB,EAAoC;AAC3C;AACA,QAAMC,iBAAiB,GAAG,+BAAW;AAAEC,MAAAA,IAAI,EAAEH,KAAK,CAACG,IAAd;AAAoBC,MAAAA,SAAS,EAAEJ,KAAK,CAACI;AAArC,KAAX,CAA1B;AACA,QAAMC,MAAM,GAAGJ,GAAG,CAACK,iBAAJ,CAAsBJ,iBAAtB,CAAf,CAH2C,CAI3C;;AACA,QAAMK,MAAM,GAAGN,GAAG,CAACO,gBAAJ,YAAyBH,MAAM,CAACI,YAAhC,OAAf,CAL2C,CAM3C;;AACAR,IAAAA,GAAG,CAACK,iBAAJ,CAAsB;AACpBI,MAAAA,KAAK,EAAEH,MAAM,CAACH,SAAP,CAAiBO,GAAjB,GAAuB,CAAvB,GAA2BN,MAAM,CAACI,YAAP,CAAoBG,MADlC;AAEpBD,MAAAA,GAAG,EAAEJ,MAAM,CAACH,SAAP,CAAiBO,GAAjB,GAAuB;AAFR,KAAtB;AAID;AApB6B,CAAzB","sourcesContent":["import * as React from 'react';\nimport { ICommand, TextState, TextApi } from './';\nimport { selectWord } from '../utils/markdownUtils';\n\nexport const italic: ICommand = {\n  name: 'italic',\n  keyCommand: 'italic',\n  buttonProps: { 'aria-label': 'Add italic text' },\n  icon: (\n    <svg data-name=\"italic\" width=\"12\" height=\"12\" role=\"img\" viewBox=\"0 0 320 512\">\n      <path fill=\"currentColor\" d=\"M204.758 416h-33.849l62.092-320h40.725a16 16 0 0 0 15.704-12.937l6.242-32C297.599 41.184 290.034 32 279.968 32H120.235a16 16 0 0 0-15.704 12.937l-6.242 32C96.362 86.816 103.927 96 113.993 96h33.846l-62.09 320H46.278a16 16 0 0 0-15.704 12.935l-6.245 32C22.402 470.815 29.967 480 40.034 480h158.479a16 16 0 0 0 15.704-12.935l6.245-32c1.927-9.88-5.638-19.065-15.704-19.065z\" />\n    </svg>\n  ),\n  execute: (state: TextState, api: TextApi) => {\n    // Adjust the selection to encompass the whole word if the caret is inside one\n    const newSelectionRange = selectWord({ text: state.text, selection: state.selection });\n    const state1 = api.setSelectionRange(newSelectionRange);\n    // Replaces the current selection with the italic mark up\n    const state2 = api.replaceSelection(`*${state1.selectedText}*`);\n    // Adjust the selection to not contain the *\n    api.setSelectionRange({\n      start: state2.selection.end - 1 - state1.selectedText.length,\n      end: state2.selection.end - 1\n    });\n  },\n};\n"]}},"error":null,"hash":"3a2411992f69116e2b5fda3deec1700a","cacheData":{"env":{}}}